name: 部署到生产服务器

on:
  push:
    branches: [ main ]
  workflow_dispatch: # 允许手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
      
      - name: 设置Node.js环境
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      
      - name: 构建项目
        run: |
          npm install
          npm run build
      
      - name: 清理构建缓存
        run: |
          find ./dist -name "*.cache" -type d -exec rm -rf {} \; 2>/dev/null || true
          find ./dist -name ".tmp" -type d -exec rm -rf {} \; 2>/dev/null || true
          find ./dist -name "node_modules" -type d -exec rm -rf {} \; 2>/dev/null || true
          find ./dist -name "*.map" -type f -delete 2>/dev/null || true
          echo "构建缓存清理完成"
      
      - name: 部署到服务器
        env:
          SSH_HOST: ${{ secrets.SERVER_HOST }}
          SSH_PORT: 22
          SSH_USER: root
          SSH_PASS: ${{ secrets.SERVER_PASS }}
        run: |
          # 安装sshpass
          sudo apt-get install -y sshpass

          # 创建dist目录的压缩包
          tar -czvf dist.tar.gz -C dist .
          
          # 上传压缩包到服务器
          sshpass -p "$SSH_PASS" scp -o StrictHostKeyChecking=no -P $SSH_PORT dist.tar.gz $SSH_USER@$SSH_HOST:/tmp/
          
          # 在服务器上解压文件到目标目录
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST <<'EOF'
          REMOTE_DIR="/opt/1panel/apps/openresty/openresty/www/sites/rwmc.top/index"
          
          # 确保目标目录存在
          mkdir -p $REMOTE_DIR
          
          # 清空目标目录中的旧文件
          rm -rf $REMOTE_DIR/*
          
          # 解压新文件到目标目录
          tar -xzvf /tmp/dist.tar.gz -C $REMOTE_DIR
          
          # 删除临时压缩包
          rm /tmp/dist.tar.gz
          
          # 清理GitHub Actions的临时文件
          rm -rf /tmp/gh*
          
          echo "部署完成!"